apiVersion: v1
kind: Namespace
metadata:
  name: {{ .Values.client.namespace }}

---
apiVersion: v1
kind: Pod
metadata:
  name: tls-client
  namespace: {{ .Values.client.namespace }}
  labels:
    app: client
spec:
  volumes:
  {{ if .Values.tls }}
    - name: certificate
      csi:
        driver: secrets-store.csi.k8s.io
        readOnly: true
        volumeAttributes:
          secretProviderClass: company-certificate
        nodePublishSecretRef:
          name: keyvault-credentials
  {{ end }}
  hostAliases:
    - ip: {{ .Values.backend.ip }}
      hostnames:
        - {{ .Values.backend.url }}
  containers:
    - name: client
      image: mcr.microsoft.com/dotnet/core/aspnet
  {{ if .Values.tls }}
      volumeMounts:
        - name: certificate
          subPath: company-certificate
          mountPath: /usr/local/share/ca-certificates/company.com.crt
      lifecycle:
        postStart:
          exec:
            command: ["/bin/sh", "-c", "update-ca-certificates"]
  {{ end }}
      command: ["/bin/bash", "-c"]
      args:
        - export BACKEND_URL="{{ if .Values.tls }}https{{ else }}http{{ end }}://{{ .Values.backend.url }}/";
          while true; do
            echo -e "\n Attempting $BACKEND_URL \n";
            curl -sS "$BACKEND_URL";
            echo -e "\n ------------------------------------------- \n";
            sleep 5;
          done
  restartPolicy: OnFailure
