apiVersion: v1
kind: Namespace
metadata:
  name: {{ .Values.backend.namespace }}

---
apiVersion: v1
kind: Service
metadata:
  name: tls-service
  namespace: {{ .Values.backend.namespace }}
spec:
  selector:
    app: tls
  type: ClusterIP
  clusterIP: {{ .Values.backend.ip }}
  ports:
    - name: http
      protocol: TCP
      port: {{ if .Values.tls }}443{{ else }}80{{ end }}
      targetPort: {{ if .Values.tls }}8443{{ else }}8080{{ end }}

---
apiVersion: v1
kind: Pod
metadata:
  name: tls-server
  namespace: {{ .Values.backend.namespace }}
  labels:
    app: tls
spec:
  volumes:
  {{ if .Values.tls }}
    - name: certificates
      emptyDir: {}
  {{ end }}
    - name: config
      configMap:
        name: tls-app-config
  {{ if .Values.tls }}
    - name: secrets
      csi:
        driver: secrets-store.csi.k8s.io
        readOnly: true
        volumeAttributes:
          secretProviderClass: company-secrets
        nodePublishSecretRef:
          name: keyvault-credentials
  {{ end }}
{{ if .Values.tls }}
  initContainers:
    - name: prepare-certificate
      image: alpine:latest
      command: ["/bin/sh", "-c"]
      args: ["apk add openssl; openssl pkey -in /secrets/server.pem  -out /certs/server.key; chmod 0644 /certs/server.key; openssl x509 -in /secrets/server.pem  -out /certs/server.crt"]
      volumeMounts:
        - name: certificates
          mountPath: "/certs"
        - name: secrets
          mountPath: /secrets/server.pem
          subPath: company-certificate
{{ end }}
  containers:
    - name: nginx
      image: bitnami/nginx:latest
      ports:
        - containerPort: {{ if .Values.tls }}8443{{ else }}8080{{ end }}
      volumeMounts:
        - name: config
          subPath: index.html
          mountPath: /app/index.html
        - name: config
          subPath: server.conf
          mountPath: /opt/bitnami/nginx/conf/server_blocks/server.conf
      {{ if .Values.tls }}
        - name: certificates
          mountPath: /certs
      {{ end }}
